{"name":"Paxml","tagline":"Process Automation eXtensible Markup Language.","body":"### Introduction\r\nPaxml is an XML-based scripting language, providing simple yet powerful syntax to automate your business operations that you would otherwise have to manually perform. For instance, accessing database and files, driving browsers, calling web APIs and glue all these together into your operational work flow. Most importantly it automates the repetitive part for you, drastically increasing the efficiency of the work and liberating you to do more creative work.\r\n\r\nTherefore, Paxml is suitable for operational staff to automate business processes and for software testers to automate test executions.\r\n\r\nPaxml is also an open source software released under Affero General Public License Version 3.0.\r\n\r\n### Taste it a bit\r\n\r\nHere is a simple example. Suppose you have an excel file which contains 1000 rows of English terms in column A that you want to let Google translate into German and save the translation back to column B. You can simply use the XML below to have the job done for you, iterating through all these 1000 rows and for each term open web browser to let Google translate do the work:\r\n```\r\n<scenario>\r\n  <readExcel id=\"excel\" file=\"MyExcel.xls\" />\r\n  <iterate values=\"${excel}\">\r\n    <url>https://translate.google.com/#en/de</url>\r\n    <type locator=\"source\">${var.A}</type>\r\n    <click locator=\"gt-lang-submit\"/>\r\n    <writeExcel file=\"${excel}\" row=\"${index+1}\" column=\"B\" >    \r\n      <pick locator=\"result_box\" timeout=\"5000\"/>\r\n    </writeExcel>\r\n  </iterate>\r\n</scenario>\r\n```\r\n\r\n### Interested?\r\nPlease check the [wiki pages](https://github.com/niuxuetao/paxml/wiki) for more examples and details.\r\n\r\n### Authors and Contributors\r\nAuthor @niuxuetao is looking for contributors.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}